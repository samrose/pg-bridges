name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    name: Test Rust Extension
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pg-version: [12, 13, 14, 15, 16]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-${{ matrix.pg-version }} postgresql-server-dev-${{ matrix.pg-version }}

    - name: Install pgrx
      run: |
        cargo install --locked cargo-pgrx --version 0.11.2
        cargo pgrx init --pg${{ matrix.pg-version }} /usr/lib/postgresql/${{ matrix.pg-version }}/bin/pg_config

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Run tests
      run: cargo pgrx test --pg${{ matrix.pg-version }}

    - name: Build extension
      run: cargo pgrx package --pg${{ matrix.pg-version }}

  test-elixir:
    name: Test Elixir Sidecar
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir-version: ['1.14', '1.15', '1.16']
        otp-version: ['25', '26']

    steps:
    - uses: actions/checkout@v4

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir-version }}
        otp-version: ${{ matrix.otp-version }}

    - name: Cache Elixir dependencies
      uses: actions/cache@v3
      with:
        path: |
          elixir_sidecar/deps
          elixir_sidecar/_build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}

    - name: Install dependencies
      run: |
        cd elixir_sidecar
        mix deps.get

    - name: Check formatting
      run: |
        cd elixir_sidecar
        mix format --check-formatted

    - name: Run Credo
      run: |
        cd elixir_sidecar
        mix credo --strict

    - name: Run tests
      run: |
        cd elixir_sidecar
        mix test

    - name: Build release
      run: |
        cd elixir_sidecar
        MIX_ENV=prod mix release elixir_sidecar

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test-rust, test-elixir]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Install PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-16 postgresql-server-dev-16

    - name: Install pgrx
      run: |
        cargo install --locked cargo-pgrx --version 0.11.2
        cargo pgrx init --pg16 /usr/lib/postgresql/16/bin/pg_config

    - name: Build Elixir sidecar
      run: |
        cd elixir_sidecar
        mix deps.get
        MIX_ENV=prod mix release elixir_sidecar

    - name: Start PostgreSQL
      run: cargo pgrx start pg16

    - name: Install extension
      run: cargo pgrx install --pg16

    - name: Run integration tests
      run: |
        # Copy the Elixir sidecar to expected location
        sudo mkdir -p /usr/local/lib/postgresql
        sudo cp elixir_sidecar/_build/prod/rel/elixir_sidecar/elixir_sidecar /usr/local/lib/postgresql/
        sudo chmod +x /usr/local/lib/postgresql/elixir_sidecar

        # Run the integration tests
        cargo pgrx test --pg16

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run Rust security audit
      run: cargo audit

    - name: Setup Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16'
        otp-version: '26'

    - name: Install Elixir dependencies
      run: |
        cd elixir_sidecar
        mix deps.get

    - name: Run Elixir security audit
      run: |
        cd elixir_sidecar
        mix deps.audit || true  # Don't fail CI on security warnings for now